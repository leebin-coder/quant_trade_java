-- Strategy Service Database Schema
-- V1: Initialize strategy tables

-- Trading strategies table
CREATE TABLE IF NOT EXISTS trading_strategies (
    id BIGSERIAL PRIMARY KEY,
    strategy_name VARCHAR(128) NOT NULL,
    strategy_type VARCHAR(64) NOT NULL,
    strategy_code TEXT,
    strategy_config TEXT,
    status VARCHAR(32) NOT NULL DEFAULT 'INACTIVE',
    user_id BIGINT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(64),
    updated_by VARCHAR(64),
    version INTEGER NOT NULL DEFAULT 0,
    deleted BOOLEAN NOT NULL DEFAULT FALSE
);

-- Strategy executions table
CREATE TABLE IF NOT EXISTS strategy_executions (
    id BIGSERIAL PRIMARY KEY,
    strategy_id BIGINT NOT NULL,
    execution_type VARCHAR(32) NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP,
    status VARCHAR(32) NOT NULL DEFAULT 'RUNNING',
    result_data TEXT,
    error_message TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (strategy_id) REFERENCES trading_strategies(id)
);

-- Strategy signals table
CREATE TABLE IF NOT EXISTS strategy_signals (
    id BIGSERIAL PRIMARY KEY,
    strategy_id BIGINT NOT NULL,
    execution_id BIGINT,
    signal_type VARCHAR(32) NOT NULL,
    symbol VARCHAR(32) NOT NULL,
    signal_direction VARCHAR(16) NOT NULL,
    signal_strength DECIMAL(5, 2),
    signal_price DECIMAL(20, 8),
    signal_data TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (strategy_id) REFERENCES trading_strategies(id),
    FOREIGN KEY (execution_id) REFERENCES strategy_executions(id)
);

-- Strategy backtest results table
CREATE TABLE IF NOT EXISTS strategy_backtest_results (
    id BIGSERIAL PRIMARY KEY,
    strategy_id BIGINT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    initial_capital DECIMAL(20, 8) NOT NULL,
    final_capital DECIMAL(20, 8) NOT NULL,
    total_return DECIMAL(10, 4),
    sharpe_ratio DECIMAL(10, 4),
    max_drawdown DECIMAL(10, 4),
    win_rate DECIMAL(10, 4),
    total_trades INTEGER,
    result_data TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (strategy_id) REFERENCES trading_strategies(id)
);

-- Indexes
CREATE INDEX IF NOT EXISTS idx_trading_strategies_user_id ON trading_strategies(user_id) WHERE deleted = FALSE;
CREATE INDEX IF NOT EXISTS idx_trading_strategies_status ON trading_strategies(status) WHERE deleted = FALSE;
CREATE INDEX IF NOT EXISTS idx_strategy_executions_strategy_id ON strategy_executions(strategy_id);
CREATE INDEX IF NOT EXISTS idx_strategy_executions_status ON strategy_executions(status);
CREATE INDEX IF NOT EXISTS idx_strategy_signals_strategy_id ON strategy_signals(strategy_id);
CREATE INDEX IF NOT EXISTS idx_strategy_signals_symbol ON strategy_signals(symbol);
CREATE INDEX IF NOT EXISTS idx_strategy_signals_created_at ON strategy_signals(created_at);
CREATE INDEX IF NOT EXISTS idx_strategy_backtest_strategy_id ON strategy_backtest_results(strategy_id);

-- Comments
COMMENT ON TABLE trading_strategies IS 'User trading strategies';
COMMENT ON TABLE strategy_executions IS 'Strategy execution history';
COMMENT ON TABLE strategy_signals IS 'Trading signals generated by strategies';
COMMENT ON TABLE strategy_backtest_results IS 'Strategy backtesting results';
COMMENT ON COLUMN trading_strategies.status IS 'Strategy status: ACTIVE, INACTIVE, PAUSED';
COMMENT ON COLUMN strategy_signals.signal_direction IS 'Signal direction: BUY, SELL, HOLD';
